<snippet>
  <content><![CDATA[
function create_post_type() {
  \$labels = array(
    'name'               => 'Projects',
    'singular_name'      => 'Project',
    'menu_name'          => 'Projects',
    'name_admin_bar'     => 'Project',
    'add_new'            => 'Add New',
    'add_new_item'       => 'Add New Project',
    'new_item'           => 'New Project',
    'edit_item'          => 'Edit Project',
    'view_item'          => 'View Project',
    'all_items'          => 'All Projects',
    'search_items'       => 'Search Projects',
    'parent_item_colon'  => 'Parent Project',
    'not_found'          => 'No Projects Found',
    'not_found_in_trash' => 'No Projects Found in Trash'
  );

  \$args = array(
    'labels'              => \$labels,
    // This is a parent of few of the other settings that appear in the list.
    // The value of public is passed to the following other attributes when they
    // are not explicitly defined: exclude_from_search, publicly_queryable,
    // show_in_nav_menus and show_ui.
    'public'              => true,
    // if true hide from wp search results
    'exclude_from_search' => true,
    // If you wanted to create a post type that populates a personnel page
    // with a list of everyone’s name, title and bio but didn’t want them to
    // have their own URL on the website, then you would set
    // publicly_queryable to false.
    'publicly_queryable'  => true,
    'show_ui'             => true,
    'show_in_nav_menus'   => true,
    'show_in_menu'        => true,
    'show_in_admin_bar'   => true,
    // A value of 5 will place the post type under “Posts,” 10 under “Media,”
    // 15 under “Links,” and 20 under “Pages.”
    'menu_position'       => 5,
    // https://developer.wordpress.org/resource/dashicons/
    'menu_icon'           => 'dashicons-admin-appearance',
    'capability_type'     => 'post',
    // When set to true, a parent post can be identified on a per-post basis
    // (basically, Pages). When false, it behaves as a Post.
    'hierarchical'        => false,
    'supports'            => array( 'title', 'editor', 'author', 'thumbnail', 'excerpt', 'comments' ),
    // When this is set to true, WordPress creates a hierarchical structure for
    // the post type. So, accessing /projects/ would give us the standard
    // archive.php view of the data. You can template out a archive-sm_project.php.
    'has_archive'         => true,
    'rewrite'             => array( 'slug' => 'projects' ),
    'query_var'           => true
  );

  register_post_type( 'sm_project', \$args );
}
]]></content>
  <!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
  <tabTrigger>cpt</tabTrigger>
  <description>php - wp - Register Custom Post Type</description>
  <!-- Optional: Set a scope to limit where the snippet will trigger -->
  <!-- <scope>source.python</scope> -->
</snippet>
